/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import static DB.Db.iud;
import static DB.Db.search;
import static Logger.Log.warning;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;

/**
 *
 * @author abhi
 */
public class AddAttendace extends javax.swing.JFrame {

    /**
     * Creates new form AddAttendace
     */
    Attendance a;
    String Id;
    String studentClassId;
    String day;

    public AddAttendace(Attendance a, String Id, String theme) {
        this.a = a;
        this.Id = Id;
        initComponents();
        tableDesign();
        themeLoad(theme);

        SimpleDateFormat sdf = new SimpleDateFormat("EEEE");
        day = sdf.format(new Date());
    }

    public AddAttendace() {
        initComponents();
        tableDesign();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel2.setBackground(new java.awt.Color(72, 52, 212));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("STUDENTS ATTENDANCE");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/images/basic/close_window_32px.png"))); // NOI18N
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Student ID");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextField1MouseEntered(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(72, 52, 212));
        jButton6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Complete");
        jButton6.setContentAreaFilled(false);
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.setOpaque(true);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(72, 52, 212)));

        jLabel4.setText("  ");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(72, 52, 212)));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("Name");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel30.setText("ID");

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel31.setText("Gender");

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel32.setText("NIC");

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel33.setText("Contact");

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel34.setText("Registerd");

        jLabel7.setText(" ");

        jLabel8.setText(" ");

        jLabel9.setText(" ");

        jLabel10.setText(" ");

        jLabel11.setText(" ");

        jLabel12.setText(" ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34)
                    .addComponent(jLabel15)
                    .addComponent(jLabel30)
                    .addComponent(jLabel32)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jTable1.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CLASS", "DATE", "TIME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setOpaque(false);
        jTable1.setShowVerticalLines(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(200);
        }

        jLabel2.setText("Last paymant :");

        jLabel5.setText("Last paymant");

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("0");

        jLabel14.setText("records found  ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel14))
                        .addGap(8, 8, 8)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed

        if (evt.getKeyChar() == 10) {

            ResultSet rs1 = null;
            String query = null;
            String query1 = null;

            try {
                if (Id.split("-")[0].equals("CL")) { // if attendace is daily class
                    rs1 = search("SELECT * FROM STUDENT INNER JOIN student_class WHERE student_class.student_id = student.id && student.id = '" + jTextField1.getText() + "' && student_class.class_id = '" + Id + "';");

                    query = "SELECT * \n"
                            + "\n"
                            + "FROM\n"
                            + " 	class_attendance \n"
                            + " 	INNER JOIN class\n"
                            + " 	INNER JOIN student_class\n 	"
                            + "         INNER JOIN subject\n"
                            + " 	INNER JOIN grade"
                            + " \n"
                            + "WHERE\n"
                            + "	class_attendance.student_class_id = student_class.id\n"
                            + "	&& student_class.class_id = class.id\n"
                            + "	&& class.subject_id = subject.id\n"
                            + "	&& subject.grade_id = grade.id"
                            + "	\n"
                            + "	&& student_class.student_id = '" + jTextField1.getText() + "'\n"
                            + "	&& student_class.class_id = '" + Id + "'\n"
                            + "\n"
                            + "ORDER BY class_attendance.id DESC";

                    query1 = "SELECT \n"
                            + "	DATE(fees.date) AS date,\n"
                            + "	month.month,\n"
                            + "	student_class_fees.year\n"
                            + "\n"
                            + "FROM\n"
                            + "	fees\n"
                            + "	INNER JOIN student_class_fees\n"
                            + "	INNER JOIN student_class \n"
                            + "	INNER JOIN month\n"
                            + "	\n"
                            + "WHERE \n"
                            + "	student_class_fees.fees_id = fees.id\n"
                            + "	&& student_class_fees.student_class_id = student_class.id\n"
                            + "	&& student_class_fees.month_id = month.id\n"
                            + "	\n"
                            + "	&& student_class.class_id = '" + Id + "'\n"
                            + "	&& fees.student_id = '" + jTextField1.getText() + "'\n"
                            + "	\n"
                            + "ORDER \n"
                            + "	BY MAX(date)\n"
                            + "\n"
                            + "	";

                    if (rs1.next()) {

                        jTextField1.setEnabled(false);

                        jLabel11.setText(rs1.getString("name"));
                        jLabel12.setText(rs1.getString("id"));
                        jLabel9.setText(rs1.getString("nic"));
                        jLabel10.setText(rs1.getString("gender"));
                        jLabel8.setText(rs1.getString("contact1"));
                        jLabel7.setText(rs1.getString("date_reg"));

                        ImageIcon imageIcon = new ImageIcon(new ImageIcon(rs1.getString("path")).getImage().getScaledInstance(121, 131, Image.SCALE_DEFAULT));
                        jLabel4.setIcon(imageIcon);

                        studentClassId = rs1.getString("student_class.id");

                    } else {
                        JOptionPane.showMessageDialog(null, "No records to find", "Warning", JOptionPane.WARNING_MESSAGE);

                    }

                    TableModel model = jTable1.getModel();
                    DefaultTableModel dtm = (DefaultTableModel) model;
                    dtm.setRowCount(0);

                    try {
                        ResultSet rs2 = search(query);
                        int i = 1;
                        while (rs2.next()) {
                            Vector<String> v = new Vector<>();

                            v.add(rs2.getString("grade") + " " + rs2.getString("subject") + " " + rs2.getString("desc"));
                            v.add(rs2.getString("date"));
                            v.add(rs2.getString("time"));

                            dtm.addRow(v);

                            jLabel18.setText(String.valueOf(i));
                            i++;
                        }

                    } catch (Exception e) {
                        System.out.println(e);
                        warning(e);
                    }

                } else if (Id.split("-")[0].equals("SC")) {   // if attendace is special class
                    rs1 = search("SELECT * FROM STUDENT INNER JOIN student_class INNER JOIN special_class WHERE student_class.student_id = student.id && student_class.class_id = special_class.class_id && student.id = '" + jTextField1.getText() + "' && special_class.id = '" + Id + "'");

                    query = "SELECT * \n"
                            + "\n"
                            + "FROM\n"
                            + " 	class_attendance \n"
                            + " 	INNER JOIN class\n"
                            + " 	INNER JOIN subject\n"
                            + " 	INNER JOIN grade\n"
                            + " 	INNER JOIN student_class\n"
                            + " 	INNER JOIN special_class \n"
                            + " \n"
                            + "WHERE\n"
                            + "	class_attendance.student_class_id = student_class.id\n"
                            + "	&& student_class.class_id = class.id\n"
                            + "	&& special_class.class_id = class.id\n"
                            + "	&& class.subject_id = subject.id\n"
                            + "	&& subject.grade_id = grade.id\n"
                            + "	\n"
                            + "	&& student_class.student_id = '" + jTextField1.getText() + "'\n"
                            + "	&& special_class.class_id = '" + Id + "'\n"
                            + "\n"
                            + "ORDER BY class_attendance.id DESC";

                    if (rs1.next()) {

                        jTextField1.setEnabled(false);

                        jLabel11.setText(rs1.getString("name"));
                        jLabel12.setText(rs1.getString("id"));
                        jLabel9.setText(rs1.getString("nic"));
                        jLabel10.setText(rs1.getString("gender"));
                        jLabel8.setText(rs1.getString("contact1"));
                        jLabel7.setText(rs1.getString("date_reg"));

                        ImageIcon imageIcon = new ImageIcon(new ImageIcon(rs1.getString("path")).getImage().getScaledInstance(121, 131, Image.SCALE_DEFAULT));
                        jLabel4.setIcon(imageIcon);

                        studentClassId = rs1.getString("student_class.id");

                    } else {
                        JOptionPane.showMessageDialog(null, "No records to find", "Warning", JOptionPane.WARNING_MESSAGE);

                    }

                    TableModel model = jTable1.getModel();
                    DefaultTableModel dtm = (DefaultTableModel) model;
                    dtm.setRowCount(0);

                    try {
                        ResultSet rs2 = search(query);
                        int i = 1;
                        while (rs2.next()) {
                            Vector<String> v = new Vector<>();

                            v.add(rs2.getString("grade") + " " + rs2.getString("subject") + " " + rs2.getString("desc"));
                            v.add(rs2.getString("date"));
                            v.add(rs2.getString("time"));

                            dtm.addRow(v);

                            jLabel18.setText(String.valueOf(i));
                            i++;
                        }

                    } catch (Exception e) {
                        System.out.println(e);
                        warning(e);
                    }

                } else {  // if attendance is exam

                    String query2 = "SELECT * \n"
                            + "\n"
                            + "FROM\n"
                            + "	student\n"
                            + "	INNER JOIN subject\n"
                            + "	INNER JOIN grade \n"
                            + "	INNER JOIN exam\n"
                            + "	\n"
                            + "WHERE \n"
                            + "	exam.subject_id = subject.id\n"
                            + "	&& subject.grade_id = grade.id\n"
                            + "	&& grade.id = student.grade_id\n"
                            + "	\n"
                            + "	&& exam.id = '" + Id + "'\n"
                            + "	&& student.id = '" + jTextField1.getText() + "'\n"
                            + "	";

                    rs1 = search(query2);

                    if (rs1.next()) {

                        jTextField1.setEnabled(false);

                        jLabel11.setText(rs1.getString("name"));
                        jLabel12.setText(rs1.getString("id"));
                        jLabel9.setText(rs1.getString("nic"));
                        jLabel10.setText(rs1.getString("gender"));
                        jLabel8.setText(rs1.getString("contact1"));
                        jLabel7.setText(rs1.getString("date_reg"));

                        ImageIcon imageIcon = new ImageIcon(new ImageIcon(rs1.getString("path")).getImage().getScaledInstance(121, 131, Image.SCALE_DEFAULT));
                        jLabel4.setIcon(imageIcon);

                    } else {
                        JOptionPane.showMessageDialog(null, "No records to find", "Warning", JOptionPane.WARNING_MESSAGE);

                    }

                }

            } catch (SQLException ex) {
                ex.printStackTrace();
                warning(ex);
            }

        }

    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased


    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped

        if (jTextField1.getText().length() >= 8) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked

    }//GEN-LAST:event_jLabel13MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        if (!jLabel11.getText().equals(" ")) {

            if (Id.split("-")[0].equals("CL")) { // if attendace is daily class

                ResultSet rs = search("SELECT * FROM class_attendance WHERE  DATE(date) = CURDATE() && class_attendance.student_class_id = '" + studentClassId + "' && class_attendance.student_id = '" + jLabel12.getText() + "'");

                try {
                    if (rs.next()) {
                        JOptionPane.showMessageDialog(null, "This student already attendanced", "Warning", JOptionPane.WARNING_MESSAGE);
                    } else {

                        if (1 == iud("INSERT INTO `class_managment`.`class_attendance` (`date`, `time`, `student_class_id`, `student_id`) "
                                + "VALUES (NOW(), NOW(), '" + studentClassId + "', '" + jLabel12.getText() + "');")) {
                            clear();
                            SimpleDateFormat sdf = new SimpleDateFormat("EEEE");
                            this.a.tableLoad(sdf.format(new Date()));
                        } else {
                            JOptionPane.showMessageDialog(null, "can not save details now, please try agin later", "Warning", JOptionPane.WARNING_MESSAGE);
                        }

                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    warning(ex);
                }

            } else if (Id.split("-")[0].equals("SC")) {   // if attendace is special class

                String query = "SELECT * \n"
                        + "\n"
                        + "FROM \n"
                        + "	special_class_attendance \n"
                        + "	INNER JOIN special_class\n"
                        + "	\n"
                        + "WHERE  \n"
                        + "	special_class_attendance.special_class_id = special_class.id\n"
                        + "\n"
                        + "	&& DATE(special_class_attendance.date) = CURDATE() \n"
                        + "	&& special_class.id = '" + Id + "'\n"
                        + "	&& special_class_attendance.student_id = '" + jTextField1.getText() + "';";

                ResultSet rs = search(query);

                try {
                    if (rs.next()) {
                        JOptionPane.showMessageDialog(null, "This student already attendanced", "Warning", JOptionPane.WARNING_MESSAGE);
                    } else {

                        if (1 == iud("INSERT INTO `class_managment`.`special_class_attendance` (`special_class_id`, `student_id`, `date`, `time`) "
                                + "VALUES ('" + Id + "', '" + jTextField1.getText() + "', NOW(), NOW());")) {
                            clear();
                            SimpleDateFormat sdf = new SimpleDateFormat("EEEE");
                            this.a.tableLoad(sdf.format(new Date()));
                        } else {
                            JOptionPane.showMessageDialog(null, "can not save details now, please try agin later", "Warning", JOptionPane.WARNING_MESSAGE);
                        }

                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    warning(ex);
                }

            } else {   // if attendance is exam

                String query = "SELECT * \n"
                        + "\n"
                        + "FROM \n"
                        + "	exam_attendance\n"
                        + "\n"
                        + "WHERE \n"
                        + "	exam_attendance.exam_id = '" + Id + "'\n"
                        + "	&& exam_attendance.student_id = '" + jTextField1.getText() + "'"
                        + "	&& DATE(date) = CURDATE();";

                ResultSet rs = search(query);

                try {
                    if (rs.next()) {
                        JOptionPane.showMessageDialog(null, "This student already attendanced", "Warning", JOptionPane.WARNING_MESSAGE);
                    } else {

                        if (1 == iud("INSERT INTO `class_managment`.`exam_attendance` (`exam_id`, `student_id`, `date`, `time`)"
                                + " VALUES ('" + Id + "', '" + jTextField1.getText() + "', NOW(), NOW());")) {
                            clear();
                            
                            this.a.tableLoad(day);
                        } else {
                            JOptionPane.showMessageDialog(null, "can not save details now, please try agin later", "Warning", JOptionPane.WARNING_MESSAGE);
                        }

                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    warning(ex);
                }

            }

        } else {
            JOptionPane.showMessageDialog(null, "Please enter student", "Warning", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked

        if (evt.getClickCount() == 2) {
            jTextField1.setEnabled(true);
            jTextField1.setText("");

            clear();

        }

    }//GEN-LAST:event_jTextField1MouseClicked

    private void jTextField1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1MouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddAttendace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddAttendace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddAttendace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddAttendace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddAttendace().setVisible(true);
            }
        });
    }

    void tableDesign() {
        JTableHeader th = jTable1.getTableHeader();
        Font font = new Font("Century Gothic", Font.PLAIN, 12);
        th.setFont(font);
        th.setOpaque(false);
        Color cb = new Color(45, 52, 54);
        Color cf = new Color(241, 242, 246);
        th.setForeground(cf);
        th.setBackground(cb);

    }

    void clear() {
        jTextField1.setText("");
        jTextField1.setEnabled(true);
        jLabel11.setText(" ");
        jLabel12.setText(" ");
        jLabel9.setText(" ");
        jLabel10.setText(" ");
        jLabel7.setText(" ");
        jLabel8.setText(" ");

        jLabel4.setIcon(null);

        TableModel model = jTable1.getModel();
        DefaultTableModel dtm = (DefaultTableModel) model;
        dtm.setRowCount(0);

        jLabel18.setText("0");

        jTextField1.requestFocus();

    }

    void themeLoad(String theme) {

        jPanel2.setBackground(new Color(Integer.parseInt(theme.split(",")[0]), Integer.parseInt(theme.split(",")[1]), Integer.parseInt(theme.split(",")[2])));
        jButton6.setBackground(new Color(Integer.parseInt(theme.split(",")[0]), Integer.parseInt(theme.split(",")[1]), Integer.parseInt(theme.split(",")[2])));

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
